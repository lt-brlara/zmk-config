/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define NUM     1
#define NAV     2
#define FUN     3
#define GAME    4

/ {
    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <39 40>;
            bindings = <&mo FUN>;
        };
        combo_game {
              timeout-ms = <50>;
              key-positions = <37 38>;
              bindings = <&tog GAME>;
          };
      };
  };

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | N/A |    Q    |     W    |     E     |          R       |  T  |      |  Y    |        U        |     I     |     O    |     P    | N/A |
// | N/A | Cmd / A | LALT / S | LCTRL / D |   LSHIFT / F     |  G  |      |  H    |    RSHIFT / J   | RCTRL / K | RALT / L | RGUI / ; | N/A |
// | N/A |    Z    |     X    |     C     |          V       |  B  |      |  N    |        M        |     ,     |     .    |     /    | N/A |
//                            |    Cmd    | num_layer / BSPC | TAB |      | ENTER | nav_layer / SPC |    ALT    |
                        bindings = <
   &none &kp Q      &kp W      &kp E       &kp R        &kp T         &kp Y &kp U        &kp I       &kp O      &kp P         &none
   &none &hm LGUI A &hm LALT S &hm LCTRL D &hm LSHIFT F &kp G         &kp H &hm RSHIFT J &hm RCTRL K &hm RALT L &hm RGUI SEMI &none
   &none &kp Z      &kp X      &kp C       &kp V        &kp B         &kp N &kp M        &kp COMMA   &kp DOT    &kp FSLH      &none
                                  &kp LGUI &lt NUM BSPC &kp TAB      &kp RET &lt NAV SPACE &kp RALT
                        >;
                };

                num_layer {
// -----------------------------------------------------------------------------------------
// | N/A |  1  |  2  |  3  |  4  |  5  |      |  6  |  7  |  8  |  9  |  0  | N/A |
// | N/A |     |     |     |     |     |      |MINUS|EQUAL|LBKT |RBKT |BSLH | N/A |
// | N/A | BT1 | BT2 | BT3 | BT4 |BTCLR|      |UNDER|PLUS |LBRC |RBRC |PIPE | N/A |
//                   | GUI |     | SPC |      | ENT |     | ALT |
                        bindings = <
   &none &kp N1       &kp N2       &kp N3       &kp N4       &kp N5           &kp N6    &kp N7    &kp N8   &kp N9   &kp N0   &none
   &none &trans       &trans       &trans       &trans       &trans           &kp MINUS &kp EQUAL &kp LBKT &kp RBKT &kp BSLH &none
   &none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_CLR       &kp UNDER &kp PLUS  &kp LBRC &kp RBRC &kp PIPE &none
                          	       &kp LGUI     &trans       &kp SPACE        &kp RET   &trans    &kp RALT
                        >;
                };

                nav_layer {
// -----------------------------------------------------------------------------------------
// | N/A |     |     |     |     |     |   |     |     |     |     |     | N/A |
// | N/A |     |     |     |     |     |   |CAPS |LEFT |DOWN |  UP |RIGHT| N/A |
// | N/A |     |     |     |     |     |   | DEL |HOME |PG_UP|PG_DN| END | N/A |
//                   | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &none &trans   &trans &trans   &trans   &trans         &kp CARET &kp AMPS &kp KP_MULTIPLY &kp LPAR &kp RPAR &none
   &none &trans   &trans &trans   &trans   &trans         &kp CAPS  &kp LEFT &kp DOWN &kp UP &kp RIGHT &none
   &none &trans   &trans &trans   &trans   &trans         &kp DEL   &kp HOME &kp PG_UP &kp PG_DN &kp END &none
                    	   &kp LGUI &trans   &kp SPACE      &kp RET   &trans   &kp RALT
                        >;
                };

                fun_layer {
// -----------------------------------------------------------------------------------------
// | N/A | FN1 | FN2 | FN3 | FN4 | FN5 |   |     |     |     |     |     | N/A |
// | N/A | FN6 | FN7 | FN8 | FN9 |FN10 |   |     |     |     |     |     | N/A |
// | N/A |FN11 |FN12 |     |     |     |   |     |     |     |     |     | N/A |
//                   | GUI |     | SPC |   | ENT |     |     |
                        bindings = <
   &none &kp F1  &kp F2  &kp F3   &kp F4 &kp F5     &trans    &trans    &trans   &trans   &trans   &none
   &none &kp F6  &kp F7  &kp F8   &kp F9 &kp F10    &trans    &trans    &trans   &trans   &trans   &none
   &none &kp F11 &kp F12 &trans   &trans &trans     &kp UNDER &kp PLUS  &kp LBRC &kp RBRC &kp PIPE &none
                         &kp LGUI &trans &kp SPACE  &trans    &trans    &trans
                        >;
                };
                game_layer {
// -----------------------------------------------------------------------------------------
// | N/A | FN1 | FN2 | FN3 | FN4 | FN5 |   |     |     |     |     |     | N/A |
// | N/A | FN6 | FN7 | FN8 | FN9 |FN10 |   |     |     |     |     |     | N/A |
// | N/A |FN11 |FN12 |     |     |     |   |     |     |     |     |     | N/A |
//                   | GUI |     | SPC |   | ENT |     |     |
                        bindings = <
   &none &kp F1  &kp F2  &kp F3   &kp F4 &kp F5     &trans    &trans    &trans   &trans   &trans   &none
   &none &kp F6  &kp F7  &kp F8   &kp F9 &kp F10    &trans    &trans    &trans   &trans   &trans   &none
   &none &kp F11 &kp F12 &trans   &trans &trans     &kp UNDER &kp PLUS  &kp LBRC &kp RBRC &kp PIPE &none
                         &kp LGUI &trans &kp SPACE  &trans    &trans    &trans
                        >;
                };
        };
};
