/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define NUM     1
#define NAV     2
#define FUN     3

/ {
    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <39 40>;
            bindings = <&mo FUN>;
        };
    };
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | N/A |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | N/A |
// | N/A |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  | N/A |
// | N/A |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | N/A |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &none &kp Q &kp W &kp E &kp R &kp T                    &kp Y &kp U  &kp I     &kp O   &kp P    &none
   &none &mt LGUI A &mt LALT S &mt LCTRL D &mt LSHIFT F   &kp G   &kp H &mt RSHIFT J &mt RCTRL K &mt RALT L &mt RGUI SEMI &none
   &none &kp Z &kp X &kp C &kp V &kp B                    &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &none
                  &kp LGUI &lt NUM BSPC &kp TAB               &kp RET &lt NAV SPACE &kp RALT
                        >;
                };
                num_layer {
// -----------------------------------------------------------------------------------------
// | N/A |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | N/A |
// | N/A | BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     | N/A |
// | N/A |     |     |     |     |     |   |     |     |     |     |     | N/A |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &none &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &none
   &none &trans &trans &trans &trans &trans                                 &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &none
   &none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_CLR     &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &none
                          	        &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp RALT
                        >;
                };

                nav_layer {
// -----------------------------------------------------------------------------------------
// | N/A |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | N/A |
// | N/A |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  | N/A |
// | N/A |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" | N/A |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &none &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &none
   &none &trans   &trans &trans   &trans   &trans      &kp CAPS &kp LEFT &kp DOWN &kp UP &kp RIGHT &none
   &none &trans   &trans &trans   &trans   &trans      &kp DEL &kp HOME &kp PG_UP &kp PG_DN &kp END &none
                    	     &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };

                fun_layer {
// -----------------------------------------------------------------------------------------
// | N/A |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | N/A |
// | N/A |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  | N/A |
// | N/A |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" | N/A |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &none &kp F1  &kp F2  &kp F3 &kp F4 &kp F5     &trans &trans &trans &trans &trans &none
   &none &kp F6  &kp F7  &kp F8 &kp F9 &kp F10    &trans &trans &trans &trans &trans &none
   &none &kp F11 &kp F12 &trans &trans &trans     &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &none
                     &kp LGUI &trans &kp SPACE    &trans &trans &trans
                        >;
                };
        };
};
